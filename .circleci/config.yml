version: 2.0
jobs:

  test:
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    machine: true
    environment:
      - COMPOSE_FILE: docker-compose.test.yml
    steps:
      - checkout

      - run:
            name: docker-compose up
            command: docker-compose up -d

      # npm
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm
          command: docker-compose run --rm node npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: build
          command: docker-compose run --rm node npm run build
      - restore_cache:
           key: dependency-cache-{{ checksum "composer.json" }}

      # composer
      - run:
          name: Install Composer
          command: docker-compose run --rm composer composer install
      - save_cache:
          key: dependency-cache-{{ checksum "composer.json" }}
          paths:
            - vendor

      # setup wordpress
      - run:
          name: Install WordPress
          command: docker-compose run --rm cli  sh /opt/bin/wait-for.sh mysql:3306 -t 60 -- sh /opt/bin/install.sh 9000

      # Tests
      - run:
          name: PHP Test
          command: docker-compose run --rm composer composer test

      - run:
          name: backstopjs
          command: docker-compose run --rm backstopjs test

      # Store
      - store_artifacts:
          path: backstop_data
          destination: artifacts
      - store_test_results:
          path: backstop_data/ci_report

  deployment:
    docker:
      - image: node
    working_directory: /var/www/wordpress/wp-content/themes/vanilla
    steps:
      - checkout
      # npm
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      # git
      - run:
          command: |
            git config --global user.email "circleci@torounit.com"
            git config --global user.name "Circle CI"
      - run:
          command: git clone -b dist --quiet "${CIRCLE_REPOSITORY_URL}" dist
      - run:
          name: dist build
          command: npm run dist
      - deploy:
          command: |
            if [[ `git status --porcelain` ]]; then
              git add -A
              git commit -m "[ci skip] Update from travis $CIRCLE_BUILD_URL"
              git push "${CIRCLE_REPOSITORY_URL}" dist
            fi
          working_directory: /var/www/wordpress/wp-content/themes/vanilla/dist

workflows:
  version: 2
  test_and_deployment:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - dist
      - deployment:
          requires:
            - test
          filters:
            branches:
              only:
                - master
