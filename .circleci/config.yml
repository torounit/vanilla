version: 2.0
jobs:
  test:
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: torounit/wp-theme-test:0.0.3
    working_directory: /var/www/wordpress/wp-content/themes/vanilla
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: build
          command: npm run build
      - restore_cache:
           key: dependency-cache-{{ checksum "composer.json" }}
      - run:
          name: Install Composer
          command: composer install
      - save_cache:
          key: dependency-cache-{{ checksum "composer.json" }}
          paths:
            - vendor
      - run:
          name: Start Services
          command: |
            sudo service php7.0-fpm start
            sudo service nginx start
            sudo service mysql start
      - run:
          name: Activate Theme
          command: wp theme activate vanilla --path=/var/www/wordpress
      - run:
          name: Access WordPress
          command: curl http://localhost > /dev/null
      - run:
          name: PHP Test
          command: composer test
      - run:
          name: Test
          command: npm test
      - store_artifacts:
          path: backstop_data

  deploy:
    docker:
      - image: torounit/wp-theme-test:0.0.3
    working_directory: /var/www/wordpress/wp-content/themes/vanilla
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          command: |
            git config --global user.email "circleci@torounit.com"
            git config --global user.name "Circle CI"
      - run:
          command: git clone -b dist --quiet "${CIRCLE_REPOSITORY_URL}" dist
      - run:
          name: dist build
          command: npm run dist
      - run:
          command: cd dist
      - run:
          command: git add -A
      - run:
          command: git commit -m "Update from travis $CIRCLE_BUILD_URL"
      - run:
          command: git push "${CIRCLE_REPOSITORY_URL}" dist

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master

